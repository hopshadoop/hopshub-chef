#!/usr/bin/env bash

# This script allows Hopsworks to start/kill/ping (check if alive) a SkLearn Flask Serving Process.
# This script can be run by hopsworks (running as user 'glassfish') as a sudo command whereupon
# it changes user to 'serving' to run the command as user 'serving'.
#

help() {
    echo ""
    echo "usage: $0 [start script_name hdfs_script_path port secretdir username project_name python_path kstore_path truststore_path password_path serving_name] | [kill pid port secretdir] "
    echo ""
    exit 1
}

SERVING_USER=<%= node['serving']['user'] %>
SERVING_GROUP=<%= node['serving']['group'] %>
HOPSWORKS_USER=<%= node['hopsworks']['user'] %>
DOMAINS_DIR=<%= node['glassfish']['domains_dir'] %>
HADOOP_HOME=<%= node['hops']['base_dir'] %>

if [ "$1" == "kill" ] ; then

    if [ $# -ne 4 ]; then
      help
    fi

    # Sanity checks for injection attacks
    re='^[0-9]+$'
    if ! [[ $2 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi
    # Check that the port is an int (and not some injection attack)
    re='^[0-9]+$'
     if ! [[ $3 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi

    if [ ! -d "$4" ] ; then
      echo "Invalid SECRET_DIR directory: $4"
      exit 1
    fi

    su "${SERVING_USER}" -c "${DOMAINS_DIR}/domain1/bin/sklearn_serving-kill.sh $2 $3 $4"

    rm -rf "$4"

elif [ "$1" == "start" ] ; then

    if [ $# -ne 12 ]; then
      help
    fi

    # Sanity checks for injection attacks
    re='^[0-9]+$'
    if ! [[ $4 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi

    SECRET_DIR=$5
    if [ -d "${SECRET_DIR}" ] ; then
      echo "Invalid secret directory. Directory already exists: $SECRET_DIR"
      exit 3
    fi

    mkdir "$SECRET_DIR"
    if [ $? -ne 0 ] ; then
      echo "Error: could not create private_dir: $SECRET_DIR"
      exit 1
    fi

    #copy flask_server to secret dir
    cp "${DOMAINS_DIR}/domain1/bin/sklearn_flask_server.py" "$SECRET_DIR"/
    # copy truststore, keystore, and certificate password to secret dir
    cp "${9}" "$SECRET_DIR"/
    cp "${10}" "$SECRET_DIR"/
    cp "${11}" "$SECRET_DIR"/


    chown -R "${SERVING_USER}":"${SERVING_GROUP}" "$SECRET_DIR"
    chmod -R 771 "$SECRET_DIR"

    su "${HOPSWORKS_USER}" -c "HADOOP_PROXY_USER=$6 ${HADOOP_HOME}/bin/hdfs dfs -copyToLocal $3 $SECRET_DIR/$2"
    if [ $? -ne 0 ] ; then
      echo "Error downloading the python script on the local Fs"
      rm -r "$SECRET_DIR"
      exit 1
    fi

    # Launch the flask_server process as user 'serving'
    su "${SERVING_USER}" -c "${DOMAINS_DIR}/domain1/bin/sklearn_serving-launch.sh $2 $4 $5 $7 $8 $6 ${12}"

    if [ $? -ne 0 ] ; then
      echo "Error starting the serving server"
      rm -r "$SECRET_DIR"
      exit 1
    fi

# get Logs for serving
elif [ "$1" == "logs" ] ; then
    LOGFILE=$3

    cat "${LOGFILE}"

elif [ "$1" == "alive" ] ; then
    if [ $# -ne 3 ]; then
        help
    fi

    # Sanity checks for injection attacks
    re='^[0-9]+$'
    if ! [[ $2 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi
    su "${SERVING_USER}" -c "pgrep -f -a sklearn_flask_server | grep -v pgrep | grep $2 | grep $3"
else
  help
fi


exit $?
