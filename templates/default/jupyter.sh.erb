#!/bin/bash

# This script allows Hopsworks to start/kill/ping (check if alive) a Jupyter Notebook Server.
# There will be 1 notebook-server per ProjectUser.
# This script can be run by hopsworks (running as user 'glassfish') as a sudo command whereupon
# it changes user to 'jupyter' to run the command as user 'jupyter'.
#

help() {
    echo ""
    echo "usage: $0 [start jupyter_home hadoop_home java_home anaconda_env port logfile secret_dir] | [kill jupyter_home pid port] | [ping pid] | [list] | [killhard pid]"
    echo ""
    exit 1
}

PORT=0


if [ "$1" == "kill" ] ; then

    if [ $# -ne 4 ]; then
	help
    fi

    # Sanity checks for injection attacks
    if [ ! -d "$2" ] ; then
	echo "Invalid JUPYTER_HOME directory: $2"
	exit 1
    fi

    # Check that the port is an int (and not some injection attack)
    re='^[0-9]+$'
     if ! [[ $3 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi

    re='^[0-9]+$'
     if ! [[ $4 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi

     
    su <%= node['jupyter']['user'] %> -c "<%= node['glassfish']['domains_dir'] %>/domain1/bin/jupyter-kill.sh $2 $3 $4"
     

    # Remove all the directories in the home jupyter folder for this project-user.
    sudo rm -rf ${2}/../*
    
elif [ "$1" == "start" ] ; then

    if [ $# -ne 8 ]; then
	help
    fi

    # Sanity checks for injection attacks
    if [ ! -d "$2" ] ; then
	echo "Invalid JUPYTER_HOME directory: $2"
	exit 1
    fi
    if [ ! -d "$3" ] ; then
	echo "Invalid HADOOP_HOME directory: $3"
	exit 2
    fi
    if [ ! -f "${4}/bin/java" ] ; then
	echo "Invalid JAVA_HOME directory: $4"
	exit 3
    fi

    if [ ! -d "${5}" ] ; then
	echo "Invalid Anaconda environment directory: $5"
	exit 3
    fi
    
    re='^[0-9]+$'
    if ! [[ $6 =~ $re ]] ; then
      echo "error: Not a number" >&2
      help
    fi

    pid=$(sudo ps -ef | grep jupyter-notebook | grep "port=$6" | awk '{print $2}')

    if [ "$pid" != "" ] ; then
        su vagrant -c "/srv/hops/domains/domain1/bin/jupyter-kill.sh $2 $pid $6"
	sleep 5
    fi

    # Should look like 'name-4444.log', where '4444' is the port number for the server
    if [[ $7 =~ ^[a-zA-Z0-9_\.]{1,255}__[a-zA-Z0-9_\.]{3,32}\-[0-9]+\.log ]] ; then
	echo "logfile ok"
    else
	echo "Invalid logfile parameter: $7"
	exit 4
    fi

#    if [[ $8 =~ ^\/$|(^(?=\/)|^\.|^\.\.)(\/(?=[^/\0])[^/\0]+)*\/?$ ]] ; then
#	echo "secret_dir looks like a path has, ok"
#    else
#	echo "Invalid secret_dir parameter, doesn't look like a path: $8"
#	exit 4
#    fi
    
    parent=$(dirname $8)
    sudo chown -R <%= node['hopsworks']['user'] %>:<%= node['jupyter']['group'] %> $parent
    sudo chmod 0730 $parent
    sudo mkdir -p $8
    if [ $? -ne 0 ] ; then
	echo "Error: could not create private_dir: $8"
	exit 1
    fi
    sudo chmod -R 770 $8
    sudo chown -R <%= node['jupyter']['user'] %>:<%= node['jupyter']['group'] %> $8
    
    # These files below were created by hopsworks. Change ownership now to Jupyter (if needed)
    #    sudo chown -R <%= node['jupyter']['user'] %>:<%= node['jupyter']['group'] %> $2
    # Make the group of the files, the jupyter group so that they can write to the files
    sudo chown -R <%= node['hopsworks']['user'] %>:<%= node['jupyter']['group'] %> $2/..
    if [ $? -ne 0 ] ; then
	echo "Error: could not change ownership of config_dir for Jupyter: $2"
	exit 1
    fi
    sudo chmod 0730 $2/..    
    sudo chown -R <%= node['jupyter']['user'] %>:<%= node['jupyter']['group'] %> $2
    sudo chmod -R 770 $2
     
    # Launch the jupyter notebook
    su <%= node['jupyter']['user'] %> -c "<%= node['glassfish']['domains_dir'] %>/domain1/bin/jupyter-launch.sh $2 $3 $4 $5 $6 $7 $8"

elif [ "$1" == "ping" ] ; then
    if [ $# -ne 2 ]; then
	help
    fi
    kill -0 $2

elif [ "$1" == "list" ] ; then
    # This command will output line-separated PIDs for all running jupyter-notebooks into the tmp file, from where it is read by Hopsworks
    sudo ps -ef | grep -v 'grep' | grep jupyter-notebook | awk '{print $2}' > /tmp/jupyterNotebookServer.pids

elif [ "$1" == "killhard" ] ; then
    sudo kill -9 $2 2>&1 > /dev/null
else
  help
fi


exit $?
