DELETE FROM `hopsworks`.`variables` WHERE `id`='fs_job_util';
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("fs_py_job_util", "hdfs:///user/<%= node['hadoop_spark']['user'] %>/hsfs_utils-<%= node['hadoop_spark']['hsfs']['utils']['version'] %>.py");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("fs_java_job_util", "hdfs:///user/<%= node['hadoop_spark']['user'] %>/hsfs-utils-<%= node['hadoop_spark']['hsfs']['utils']['version'] %>.jar");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("kube_skip_namespace_creation", "<%= node['hopsworks']['kubernetes']['skip_namespace_creation']%>");

DELETE FROM `hopsworks`.`host_services` WHERE `name`='elasticsearch';
DELETE FROM `hopsworks`.`host_services` WHERE `name`='kibana';

REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES ("kube_knative_domain_name", "<%= node['kube-hops']['knative']['domain_name'] %>", 1);

REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES ("kube_kserve_installed", "<%= node['kube-hops']['kserve']['enabled'] %>", 1);
DELETE FROM `hopsworks`.`variables` WHERE `id`='kube_kfserving_installed';

REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("quotas_featuregroups_online_disabled", <%= node['hopsworks']['quotas']['online_disabled_featuregroups'] %>);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("quotas_featuregroups_online_enabled", <%= node['hopsworks']['quotas']['online_enabled_featuregroups'] %>);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("quotas_training_datasets", <%= node['hopsworks']['quotas']['training_datasets'] %>);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("quotas_model_deployments_total", <%= node['hopsworks']['quotas']['total_model_deployments'] %>);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("quotas_model_deployments_running", <%= node['hopsworks']['quotas']['running_model_deployments'] %>);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES ("quotas_max_parallel_executions", <%= node['hopsworks']['quotas']['max_parallel_executions'] %>);

-- HOPSWORKS-3158
REPLACE INTO `hopsworks`.`variables` (`ID`, `VALUE`) VALUES ('hopsworks_public_host', "<%= node['hopsworks']['hopsworks_public_host'] %>");
-- HOPSWORKS-3109
DELETE FROM `hopsworks`.`variables` WHERE `id`='aws_instance_role';

REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_of_type', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "type_": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_distinct_values_to_be_in_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "value_set": [], "parse_strings_as_datetimes": false, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_distinct_values_to_contain_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "value_set": [], "parse_strings_as_datetimes": false, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_distinct_values_to_equal_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "value_set": [], "parse_strings_as_datetimes": null, "mostly": 1, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_kl_divergence_to_be_less_than', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "partition_object": null, "threshold": null, "tail_weight_holdout": 0, "internal_weight_holdout": 0, "bucketize_data": true, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_max_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "parse_strings_as_datetimes": false, "auto": false, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_mean_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_median_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_min_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "parse_strings_as_datetimes": false, "auto": false, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_most_common_value_to_be_in_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "value_set": [], "ties_okay": null, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_pair_values_a_to_be_greater_than_b', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1.0, "parse_strings_as_datetimes": false, "allow_cross_type_comparisons": null, "ignore_row_if": "both_values_are_missing", "column_A": "feature_A", "column_B": "feature_B", "or_equal": true}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_pair_values_to_be_equal', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1.0, "ignore_row_if": "both_values_are_missing", "column_A": "feature_A", "column_B": "feature_B"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_pair_values_to_be_in_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1.0, "ignore_row_if": "both_values_are_missing", "column_A": "feature_A", "column_B": "feature_B", "value_pairs_set": []');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_proportion_of_unique_values_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_quantile_values_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "quantile_ranges": null, "allow_relative_error": false, "meta": null, "auto": false, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_stdev_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "strict_min": false, "max_value": null, "strict_max": false, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_sum_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "column": "feature", "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_to_exist', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "column": null, "column_index": null}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_unique_value_count_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "min_value": null, "max_value": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_value_lengths_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "min_value": null, "max_value": null, "strict_min": null, "strict_max": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_value_lengths_to_equal', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "parse_strings_as_datetimes": false, "column": "feature", "value": 1}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_value_z_scores_to_be_less_than', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "threshold": null, "double_sided": true, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "min_value": null, "max_value": null, "strict_min": false, "strict_max": false, "parse_strings_as_datetimes": false, "allow_cross_type_comparisons": null, "meta": null, "auto": false, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_dateutil_parseable', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_decreasing', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "strictly": null, "parse_strings_as_datetimes": false, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_in_set', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "value_set": [], "parse_strings_as_datetimes": false, "auto": false, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_in_type_list', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "type_list": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_increasing', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "strictly": null, "parse_strings_as_datetimes": false, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_json_parseable', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_null', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_be_unique', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "parse_strings_as_datetimes": false, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_match_json_schema', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature", "json_schema": "{}"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_match_like_pattern', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "like_pattern": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_match_like_pattern_list', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "like_pattern_list": null, "match_on": "any", "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_match_regex', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "regex": "(?s).*", "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_match_regex_list', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature", "regex_list": ["valid regex!", "other valid regex"], "match_on": "any"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_match_strftime_format', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature", "strftime_format": "dd-MM-YYYY"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_not_be_in_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "parse_strings_as_datetimes": false, "column": "feature", "value_set": []}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_not_be_null', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_not_match_like_pattern', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "like_pattern": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_not_match_like_pattern_list', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "like_pattern_list": null, "column": "feature"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_not_match_regex', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature", "regex": "valid regex!"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_column_values_to_not_match_regex_list', '{"include_config": true, "catch_exceptions": true, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "mostly": 1, "column": "feature", "regex_list": ["valid regex!", "other valid regex"]}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_compound_columns_to_be_unique', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "ignore_row_if": "all_values_are_missing", "column_list": []}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_multicolumn_sum_to_equal', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "ignore_row_if": "all_values_are_missing", "column_list": [], "sum_total": 0}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_select_column_values_to_be_unique_within_record', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "ignore_row_if": "all_values_are_missing", "column_list": []}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_column_count_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "meta": null, "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_column_count_to_equal', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "value": null, "meta": null, "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_columns_to_match_ordered_list', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "row_condition": null, "condition_parser": null, "column_list": [], "column": null, "column_index": null, "meta": null}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_columns_to_match_set', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "column_set": [], "exact_match": true, "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_row_count_to_be_between', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "min_value": null, "max_value": null, "meta": null, "auto": false, "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_row_count_to_equal', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "value": null, "meta": null, "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');
REPLACE INTO `hopsworks`.`great_expectation` (expectation_type, kwargs_template) VALUES ('expect_table_row_count_to_equal_other_table', '{"include_config": true, "catch_exceptions": false, "result_format": "BASIC", "other_table_name": null, "row_condition": "find valid row_condition simple example", "condition_parser": "find valid condition_parser simple example"}');

REPLACE INTO `hopsworks`.`bbc_group` (`group_name`, `group_desc`, `gid`) VALUES ('HOPS_SERVICE_USER', 'Hopsworks as a service user', 1008);

REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('kube_tainted_nodes', "<%= node['kube-hops']['taints'] %>");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('kube_node_taints_monitor_interval', "<%= node['hopsworks']['kube']['kube_taints_monitor_interval'] %>");

REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES('docker_cgroup_enabled', "<%= node['hops']['docker']['cgroup']['enabled'] %>", 1);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('docker_cgroup_memory_limit_gb', "<%= node['hops']['docker']['cgroup']['memory']['hard-limit'] %>");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('docker_cgroup_soft_limit_memory_gb', "<%= node['hops']['docker']['cgroup']['memory']['soft-limit']  %>");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('docker_cgroup_cpu_quota_percentage', "<%= node['hops']['docker']['cgroup']['cpu']['quota']['percentage'] %>");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('docker_cgroup_cpu_period', "<%= node['hops']['docker']['cgroup']['cpu']['period'] %>");
REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('docker_cgroup_monitor_interval', "<%= node['hopsworks']['docker']['cgroup_monitor_interval'] %>");

REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('prometheus_port', "<%= node['prometheus']['port']  %>");

REPLACE INTO `hopsworks`.`variables`(`id`, `value`) VALUES('kube_kserve_tensorflow_version', "<%= node['kube-hops']['kserve']['tensorflow']['version'] %>");

DELETE FROM `hopsworks`.`variables` WHERE `id`='kube_docker_cores_fraction';

REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES('kube_serving_max_memory_allocation', "<%= node['kube-hops']['serving_max_memory_allocation'] %>", 1);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES('kube_serving_max_cores_allocation', "<%= node['kube-hops']['serving_max_cores_allocation'] %>", 1);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES('kube_serving_max_gpus_allocation', "<%= node['kube-hops']['serving_max_gpus_allocation'] %>", 1);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES('kube_serving_max_num_instances', "<%= node['kube-hops']['serving_max_num_instances'] %>", 1);
REPLACE INTO `hopsworks`.`variables`(`id`, `value`, `visibility`) VALUES('kube_serving_min_num_instances', "<%= node['kube-hops']['serving_min_num_instances'] %>", 1);